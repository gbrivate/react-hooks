{"version":3,"sources":["component/AddTask.js","component/ListTask.js","TaskApp.js","hooks/useTask.js","index.js"],"names":["AddTask","props","task","setTask","addTask","htmlFor","id","maxLength","value","onChange","e","target","onClick","ListTask","listTask","removeTask","taskStyle","width","display","justifyContent","marginBottom","map","style","key","TaskApp","useState","error","setError","setListTask","useEffect","errorMsg","find","t","concat","prevState","filter","useTask","color","render","document","getElementById"],"mappings":"yKAEaA,EAAU,SAAAC,GAAU,IACxBC,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,QAEtB,OACI,6BACE,2BAAOC,QAAQ,QAAf,aACA,2BAAOC,GAAG,OAAOC,UAAU,KACpBC,MAAON,EACPO,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,UAJ3C,OAME,4BAAQI,QAAS,kBAAMR,MAAvB,SCVKS,EAAW,SAAAZ,GAAU,IACzBa,EAAwBb,EAAxBa,SAAUC,EAAcd,EAAdc,WAGXC,EAAY,CAChBC,MAAO,OACPC,QAAS,OACTC,eAAgB,gBAChBC,aAAc,SAGhB,OACI,6BACE,2CAGEN,GAAYA,EAASO,KAAI,SAAAnB,GACvB,OACI,yBAAKoB,MAAON,EAAWO,IAAKrB,GAC1B,+BAAQA,GADV,OAEE,4BAAQU,QAAS,kBAAMG,EAAWb,KAAlC,gBCjBLsB,EAAU,WAAO,IAAD,ECHN,WAAM,MAGHC,mBAAS,IAHN,mBAGpBvB,EAHoB,KAGdC,EAHc,OAIDsB,mBAAS,IAJR,mBAIpBC,EAJoB,KAIbC,EAJa,OAKKF,mBAAS,IALd,mBAKpBX,EALoB,KAKVc,EALU,KAQ3BC,qBAAU,kBAAM1B,EAAQ,MAAK,CAACW,IAqB9B,MAAO,CACLZ,OACAC,UACAW,WACAY,QACAtB,QAvBc,WACd,IAAI0B,EAAW,GAEGhB,EAASiB,MAAK,SAAAC,GAAC,OAAIA,IAAM9B,KAIrC4B,EAAW,uBADXF,EAAYd,EAASmB,OAAO/B,IAGlCyB,EAASG,IAeTf,WAXiB,SAAAb,GACjB0B,GAAY,SAAAM,GAAS,OAAIA,EAAUC,QAAO,SAAAH,GAAC,OAAIA,IAAM9B,QACrDyB,EAAS,MDfPS,GANFlC,EAFyB,EAEzBA,KACAC,EAHyB,EAGzBA,QACAW,EAJyB,EAIzBA,SACAY,EALyB,EAKzBA,MACAtB,EANyB,EAMzBA,QACAW,EAPyB,EAOzBA,WAMF,OACI,6BAEE,kBAAC,EAAD,CACIb,KAAMA,EACNC,QAASA,EACTC,QAASA,IAIZsB,GAAS,uBAAGJ,MAZA,CAACe,MAAO,QAYYX,GAEjC,kBAAC,EAAD,CACIZ,SAAUA,EACVC,WAAYA,ME3BxBuB,iBAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,W","file":"static/js/main.3c72859a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const AddTask = props => {\n  const {task, setTask, addTask} = props;\n\n  return (\n      <div>\n        <label htmlFor=\"task\">Task:&nbsp;</label>\n        <input id=\"task\" maxLength=\"15\"\n               value={task}\n               onChange={(e) => setTask(e.target.value)}/>\n        &nbsp;\n        <button onClick={() => addTask()}>Add</button>\n      </div>\n  );\n\n};","import React from 'react';\n\nexport const ListTask = props => {\n  const {listTask, removeTask} = props;\n\n  // task list.\n  const taskStyle = {\n    width: '12em',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: '0.5em'\n  };\n\n  return (\n      <div>\n        <p>Tasks to do:</p>\n\n        {\n          listTask && listTask.map(task => {\n            return (\n                <div style={taskStyle} key={task}>\n                  <label>{task}</label>&nbsp;\n                  <button onClick={() => removeTask(task)}>\n                    Remove\n                  </button>\n                </div>\n            );\n          })\n        }\n      </div>\n  );\n\n};\n","import React from 'react';\n\nimport { useTask } from './hooks';\nimport { AddTask, ListTask } from './component';\n\nexport const TaskApp = () => {\n  const {\n    task,\n    setTask,\n    listTask,\n    error,\n    addTask,\n    removeTask\n  } = useTask();\n\n  // error css\n  const errorStyle = {color: 'red'};\n\n  return (\n      <div>\n\n        <AddTask\n            task={task}\n            setTask={setTask}\n            addTask={addTask}\n        />\n\n        {/* if error is valid than display it */}\n        {error && <p style={errorStyle}>{error}</p>}\n\n        <ListTask\n            listTask={listTask}\n            removeTask={removeTask}\n        />\n\n      </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nexport const useTask = () => {\n\n  // create the states\n  const [task, setTask] = useState('');\n  const [error, setError] = useState('');\n  const [listTask, setListTask] = useState([]);\n\n  // once listTask changes, clean the task.\n  useEffect(() => setTask(''), [listTask]);\n\n  // add a task also verify duplicate task and display an error.\n  const addTask = () => {\n    let errorMsg = '';\n\n    const taskFound = listTask.find(t => t === task);\n\n    !taskFound\n        ? setListTask(listTask.concat(task))\n        : errorMsg = 'Task already added!!';\n\n    setError(errorMsg);\n  };\n\n  // remove task given one.\n  const removeTask = task => {\n    setListTask(prevState => prevState.filter(t => t !== task));\n    setError('');\n  };\n\n  return {\n    task,\n    setTask,\n    listTask,\n    error,\n    addTask,\n    removeTask,\n  };\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TaskApp } from './TaskApp';\n\nrender(<TaskApp/>, document.getElementById('root'));\n"],"sourceRoot":""}